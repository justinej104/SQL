--For this project, I downloaded Spotify data from Kaggle.
--Then I created a table to insert Spotify data into.
--Finally, I performed analytics on the data using SQL. 

--Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

--Then I inserted the Spotify Data .csv into the table.
--Next, I explored the data using the following SQL. 

--What are the 10 most popular songs and is there danceability and energy higher than the average of the list? 
SELECT track_name, popularity,
    CASE
        WHEN danceability > (SELECT AVG(danceability) FROM BIT_DB.Spotifydata) THEN 'above average'
        WHEN danceability = (SELECT AVG(danceability) FROM BIT_DB.Spotifydata) THEN 'average'
        ELSE 'less than average'
    END AS DanceabiltyComparison,
    CASE
        WHEN energy > (SELECT AVG(energy) FROM BIT_DB.Spotifydata) THEN 'above average'
        WHEN energy = (SELECT AVG(energy) FROM BIT_DB.Spotifydata) THEN 'average'
        ELSE 'less than average'
    END AS EnergyComparison
FROM BIT_DB.Spotifydata
WHERE danceability > (SELECT AVG(danceability) FROM BIT_DB.Spotifydata)
ORDER BY popularity DESC
LIMIT 10;

--What artists appear on this list more than once? How many times do they appear?
SELECT artist_name, COUNT(artist_name)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING COUNT(artist_name) > 1
ORDER BY COUNT(artist_name) DESC;

--What songs by BTS are on the list?
SELECT track_name
FROM BIT_DB.Spotifydata
WHERE artist_name = 'BTS';

--What song key(s) are most frequent on the list?
SELECT song_key, COUNT(song_key)
FROM BIT_DB.Spotifydata
GROUP BY song_key
ORDER BY COUNT(song_key) DESC
LIMIT 5;
